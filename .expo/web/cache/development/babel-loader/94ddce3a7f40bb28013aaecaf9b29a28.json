{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dhankhar/Downloads/Wily_Authentication-master/screens/BookTransactionScreen.js\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase';\nimport db from \"../config.js\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': false\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\n              });\n              Alert.alert(\"Book issued!\");\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': true\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkBookEligibility = function _callee5() {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"bookId\", \"==\", _this.state.scannedBookId).get());\n\n            case 2:\n              bookRef = _context5.sent;\n              transactionType = \"\";\n\n              if (bookRef.docs.length == 0) {\n                transactionType = \"false\";\n                console.log(bookRef.docs.length);\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n                  if (book.bookAvailability) transactionType = \"Issue\";else transactionType = \"Return\";\n                });\n              }\n\n              return _context5.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee6() {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"students\").where(\"studentId\", \"==\", _this.state.scannedStudentId).get());\n\n            case 2:\n              studentRef = _context6.sent;\n              isStudentEligible = \"\";\n\n              if (studentRef.docs.length == 0) {\n                _this.setState({\n                  scannedStudentId: '',\n                  scannedBookId: ''\n                });\n\n                isStudentEligible = false;\n                Alert.alert(\"The student id doesn't exist in the database!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.numberOfBooksIssued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    Alert.alert(\"The student has already issued 2 books!\");\n\n                    _this.setState({\n                      scannedStudentId: '',\n                      scannedBookId: ''\n                    });\n                  }\n                });\n              }\n\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkStudentEligibilityForReturn = function _callee7() {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", _this.state.scannedBookId).limit(1).get());\n\n            case 2:\n              transactionRef = _context7.sent;\n              isStudentEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n                if (lastBookTransaction.studentId === _this.state.scannedStudentId) isStudentEligible = true;else {\n                  isStudentEligible = false;\n                  Alert.alert(\"The book wasn't issued by this student!\");\n\n                  _this.setState({\n                    scannedStudentId: '',\n                    scannedBookId: ''\n                  });\n                }\n              });\n              return _context7.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleTransaction = function _callee8() {\n      var transactionType, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionType = _context8.sent;\n              console.log(\"Transaction Type\", transactionType);\n\n              if (transactionType) {\n                _context8.next = 9;\n                break;\n              }\n\n              Alert.alert(\"The book doesn't exist in the library database!\");\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n              _context8.next = 22;\n              break;\n\n            case 9:\n              if (!(transactionType === \"Issue\")) {\n                _context8.next = 17;\n                break;\n              }\n\n              _context8.next = 12;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 12:\n              isStudentEligible = _context8.sent;\n              if (isStudentEligible) _this.initiateBookIssue();\n              Alert.alert(\"Book issued to the student!\");\n              _context8.next = 22;\n              break;\n\n            case 17:\n              _context8.next = 19;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForReturn());\n\n            case 19:\n              isStudentEligible = _context8.sent;\n              if (isStudentEligible) _this.initiateBookReturn();\n              Alert.alert(\"Book returned to the library!\");\n\n            case 22:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          behavior: \"padding\",\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/cycle.png\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          }\n        }, \"Bike Repair\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          }\n        }, \"Scan\"))), React.createElement(Text, {\n          style: styles.transactionAlert,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          }\n        }, this.state.transactionMessage), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee9() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    transactionMessage = _this2.handleTransaction();\n                    console.log(\"Transaction Message: \", transactionMessage);\n\n                  case 2:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: '#FBC02D',\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: 'white'\n  },\n  transactionAlert: {\n    margin: 10,\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["/Users/dhankhar/Downloads/Wily_Authentication-master/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","Alert","alert","initiateBookReturn","checkBookEligibility","where","get","bookRef","transactionType","docs","length","console","log","map","book","bookAvailability","checkStudentEligibilityForBookIssue","studentRef","isStudentEligible","student","numberOfBooksIssued","checkStudentEligibilityForReturn","limit","transactionRef","lastBookTransaction","studentId","handleTransaction","transactionMessage","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","buttonText","transactionAlert","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, TextInput, Image, StyleSheet, KeyboardAvoidingView, Alert } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase'\nimport db from '../config.js'\n\nexport default class TransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId: '',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage: ''\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n\n      if(buttonState===\"BookId\"){\n        this.setState({\n          scanned: true,\n          scannedBookId: data,\n          buttonState: 'normal'\n        });\n      }\n      else if(buttonState===\"StudentId\"){\n        this.setState({\n          scanned: true,\n          scannedStudentId: data,\n          buttonState: 'normal'\n        });\n      }\n      \n    }\n\n    initiateBookIssue = async()=>{\n      //add a transaction\n      db.collection(\"transactions\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Issue\"\n      })\n      //change book status\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        'bookAvailability': false\n      })\n      //change number  of issued books for student\n      db.collection(\"students\").doc(this.state.scannedStudentId).update({\n        'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\n      })\n\n      Alert.alert(\"Book issued!\")\n\n      this.setState({\n        scannedStudentId: '',\n        scannedBookId: ''\n      })\n    }\n\n    initiateBookReturn = async()=>{\n      //add a transaction\n      db.collection(\"transactions\").add({\n        'studentId': this.state.scannedStudentId,\n        'bookId' : this.state.scannedBookId,\n        'date' : firebase.firestore.Timestamp.now().toDate(),\n        'transactionType': \"Return\"\n      })\n      //change book status\n      db.collection(\"books\").doc(this.state.scannedBookId).update({\n        'bookAvailability': true\n      })\n      //change number  of issued books for student\n      db.collection(\"students\").doc(this.state.scannedStudentId).update({\n        'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\n      })\n\n      this.setState({\n        scannedStudentId: '',\n        scannedBookId: ''\n      })\n    }\n\n    checkBookEligibility = async()=>{\n      const bookRef = await db.collection(\"books\").where(\"bookId\",\"==\",this.state.scannedBookId).get()\n      var transactionType = \"\"\n      if(bookRef.docs.length == 0){\n        transactionType = \"false\";\n        console.log(bookRef.docs.length)\n      }\n      else{\n        bookRef.docs.map((doc)=>{\n          var book = doc.data()\n          if (book.bookAvailability)\n            transactionType = \"Issue\"\n          else\n            transactionType = \"Return\"\n          \n        })\n      }\n\n      return transactionType\n      \n    }\n\n    checkStudentEligibilityForBookIssue = async()=>{\n      const studentRef = await db.collection(\"students\").where(\"studentId\",\"==\",this.state.scannedStudentId).get()\n      var isStudentEligible = \"\"\n      if(studentRef.docs.length == 0){\n        this.setState({\n          scannedStudentId: '',\n          scannedBookId: ''\n        })\n        isStudentEligible = false\n        Alert.alert(\"The student id doesn't exist in the database!\")\n      }\n      else{\n         studentRef.docs.map((doc)=>{\n            var student = doc.data();\n            if(student.numberOfBooksIssued < 2){\n              isStudentEligible = true\n            }\n            else{\n              isStudentEligible = false\n              Alert.alert(\"The student has already issued 2 books!\")\n              this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              })\n            }\n\n          })\n\n      }\n\n      return isStudentEligible\n\n    }\n\n    checkStudentEligibilityForReturn = async()=>{\n      const transactionRef = await db.collection(\"transactions\").where(\"bookId\",\"==\",this.state.scannedBookId).limit(1).get()\n      var isStudentEligible = \"\"\n      transactionRef.docs.map((doc)=>{\n        var lastBookTransaction = doc.data();\n        if(lastBookTransaction.studentId === this.state.scannedStudentId)\n          isStudentEligible = true\n        else {\n          isStudentEligible = false\n          Alert.alert(\"The book wasn't issued by this student!\")\n          this.setState({\n            scannedStudentId: '',\n            scannedBookId: ''\n          })\n        }\n          \n      })\n      return isStudentEligible\n    }\n\n\n    handleTransaction = async()=>{\n     //verify if the student is eligible for book issue or return or none\n            //student id exists in the database\n            //issue : number of book issued < 2\n            //issue: verify book availability\n            //return: last transaction -> book issued by the student id\n      var transactionType = await this.checkBookEligibility();\n      console.log(\"Transaction Type\", transactionType)\n      if (!transactionType) {\n        Alert.alert(\"The book doesn't exist in the library database!\")\n        this.setState({\n          scannedStudentId: '',\n          scannedBookId: ''\n        })\n      }\n\n      else if(transactionType === \"Issue\"){\n        var isStudentEligible = await this.checkStudentEligibilityForBookIssue()\n        if(isStudentEligible)\n          this.initiateBookIssue()\n          Alert.alert(\"Book issued to the student!\")     \n      }\n\n      else{\n        var isStudentEligible = await this.checkStudentEligibilityForReturn()\n        if(isStudentEligible)\n          this.initiateBookReturn()\n          Alert.alert(\"Book returned to the library!\")\n      }\n    }\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\n            <View>\n              <Image\n                source={require(\"../assets/cycle.png\")}\n                style={{width:200, height: 200}}/>\n              <Text style={{textAlign: 'center', fontSize: 30}}>Bike Repair</Text>\n            </View>\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Book Id\"\n              onChangeText={(text)=>{\n                this.setState({\n                  scannedBookId: text\n                })\n              }}\n              value={this.state.scannedBookId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n\n            <View style={styles.inputView}>\n            <TextInput \n              style={styles.inputBox}\n              placeholder=\"Student Id\"\n              onChangeText={(text)=>{\n                this.setState({\n                  scannedStudentId: text\n                })\n              }}\n              value={this.state.scannedStudentId}/>\n            <TouchableOpacity \n              style={styles.scanButton}\n              onPress={()=>{\n                this.getCameraPermissions(\"StudentId\")\n              }}>\n              <Text style={styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n            </View>\n            <Text style={styles.transactionAlert}>{this.state.transactionMessage}</Text>\n            <TouchableOpacity\n              style={styles.submitButton}\n              onPress={async()=>{\n                var transactionMessage = this.handleTransaction();\n                console.log(\"Transaction Message: \",transactionMessage)\n              }}>\n              <Text style={styles.submitButtonText}>Submit</Text>\n            </TouchableOpacity>\n          </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 15,\n      textAlign: 'center',\n      marginTop: 10\n    },\n    inputView:{\n      flexDirection: 'row',\n      margin: 20\n    },\n    inputBox:{\n      width: 200,\n      height: 40,\n      borderWidth: 1.5,\n      borderRightWidth: 0,\n      fontSize: 20\n    },\n    scanButton:{\n      backgroundColor: '#66BB6A',\n      width: 50,\n      borderWidth: 1.5,\n      borderLeftWidth: 0\n    },\n    submitButton:{\n      backgroundColor: '#FBC02D',\n      width: 100,\n      height:50\n    },\n    submitButtonText:{\n      padding: 10,\n      textAlign: 'center',\n      fontSize: 20,\n      fontWeight:\"bold\",\n      color: 'white'\n    },\n    transactionAlert:{\n      margin:10,\n      color: 'red'\n    }\n  });"]},"metadata":{},"sourceType":"module"}